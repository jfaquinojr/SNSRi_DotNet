<!DOCTYPE html>
<html>
<head lang="en">
    <base href="/">
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="description" content="Metro, a sleek, intuitive, and powerful framework for faster and easier web development for Windows Metro Style.">
    <meta name="keywords" content="HTML, CSS, JS, JavaScript, framework, metro, front-end, frontend, web development">
    <meta name="author" content="Sergey Pimenov and Metro UI CSS contributors">
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.ico"/>
    <title>SNSRi|@ViewBag.Title</title>

    <!--<link href="../css/metro-responsive.css" rel="stylesheet">-->

    @Styles.Render("~/Content/main")


    <style>


        </style>


</head>
<body style="overflow-y: hidden;" ng-app="app" ng-controller="TilesController">

<div tile-area class="tile-area tile-area-scheme-dark fg-white" style="height: 100%; max-height: 100% !important;">
    <a style="color: white;" href="/"><h1 class="tile-area-title">SNSRi</h1></a>
    
    <div ng-controller="ToolboxController">
        <toolbox></toolbox>
    </div>


    @RenderBody()
</div>
    
@Scripts.Render("~/bundles/main")
    
    
<script>
       

        function showCharms(id){
            var  charm = $(id).data("charm");
            if (charm.element.data("opened") === true) {
                charm.close();
            } else {
                charm.open();
            }
        }

        function setSearchPlace(el){
            var a = $(el);
            var text = a.text();
            var toggle = a.parents('label').children('.dropdown-toggle');

            toggle.text(text);
        }

        $(function(){
            var current_tile_area_scheme = localStorage.getItem('tile-area-scheme') || "tile-area-scheme-dark";
            $(".tile-area").removeClass (function (index, css) {
                return (css.match (/(^|\s)tile-area-scheme-\S+/g) || []).join(' ');
            }).addClass(current_tile_area_scheme);

            $(".schemeButtons .button").hover(
                    function(){
                        var b = $(this);
                        var scheme = "tile-area-scheme-" +  b.data('scheme');
                        $(".tile-area").removeClass (function (index, css) {
                            return (css.match (/(^|\s)tile-area-scheme-\S+/g) || []).join(' ');
                        }).addClass(scheme);
                    },
                    function(){
                        $(".tile-area").removeClass (function (index, css) {
                            return (css.match (/(^|\s)tile-area-scheme-\S+/g) || []).join(' ');
                        }).addClass(current_tile_area_scheme);
                    }
            );

            $(".schemeButtons .button").on("click", function(){
                var b = $(this);
                var scheme = "tile-area-scheme-" +  b.data('scheme');

                $(".tile-area").removeClass (function (index, css) {
                    return (css.match (/(^|\s)tile-area-scheme-\S+/g) || []).join(' ');
                }).addClass(scheme);

                current_tile_area_scheme = scheme;
                localStorage.setItem('tile-area-scheme', scheme);

                showSettings();
            });
        });

</script>
    

<script src="~/app/app.js"></script>
<script src="~/app/tilesController.js"></script>
<script src="~/app/toolboxController.js"></script>
@RenderSection("scripts", required: false)


</body>
</html>